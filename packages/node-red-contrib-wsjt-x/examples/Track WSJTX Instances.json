[
    {
        "id": "a59ea6503785db5d",
        "type": "tab",
        "label": "Track WSJTX Instances",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2fd67336e3acb5b7",
        "type": "wsjt-x-decode",
        "z": "a59ea6503785db5d",
        "name": "",
        "x": 320,
        "y": 140,
        "wires": [
            [
                "591bd212f42259f6"
            ]
        ]
    },
    {
        "id": "377126e27e0c2679",
        "type": "udp in",
        "z": "a59ea6503785db5d",
        "name": "",
        "iface": "",
        "port": "2237",
        "ipv": "udp4",
        "multicast": "true",
        "group": "239.255.0.1",
        "datatype": "buffer",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "2fd67336e3acb5b7"
            ]
        ]
    },
    {
        "id": "2a6d348cb39c8f68",
        "type": "debug",
        "z": "a59ea6503785db5d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 140,
        "wires": []
    },
    {
        "id": "591bd212f42259f6",
        "type": "function",
        "z": "a59ea6503785db5d",
        "name": "Track Instances",
        "func": "const instances = flow.get('wsjtx') || {};\n\nconst [wsjtx_id, msg_type] = msg.topic.split('/');\nif (msg_type == 'status') {\n    instances[wsjtx_id] = msg.payload;\n    instances[wsjtx_id]['address'] = {\n        ip: msg.ip,\n        port: msg.port\n    };\n} else if (msg_type == 'close') {\n    delete instances[wsjtx_id];\n}\n\nflow.set('wsjtx', instances);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 140,
        "wires": [
            [
                "2a6d348cb39c8f68"
            ]
        ]
    },
    {
        "id": "34b6451e2665fdfc",
        "type": "inject",
        "z": "a59ea6503785db5d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 380,
        "wires": [
            [
                "376e8b6776253e90"
            ]
        ]
    },
    {
        "id": "fe431e80153e2c1e",
        "type": "debug",
        "z": "a59ea6503785db5d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 380,
        "wires": []
    },
    {
        "id": "dda6164af781319d",
        "type": "inject",
        "z": "a59ea6503785db5d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Node-RED/status",
        "payload": "{\"id\": \"Node-RED\"}",
        "payloadType": "json",
        "x": 240,
        "y": 240,
        "wires": [
            [
                "591bd212f42259f6"
            ]
        ]
    },
    {
        "id": "376e8b6776253e90",
        "type": "function",
        "z": "a59ea6503785db5d",
        "name": "Get Instance Names",
        "func": "msg.payload = Object.keys(flow.get('wsjtx'))\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 380,
        "wires": [
            [
                "fe431e80153e2c1e"
            ]
        ]
    },
    {
        "id": "5ced0786848517b6",
        "type": "inject",
        "z": "a59ea6503785db5d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Node-RED/close",
        "payload": "{\"id\": \"Node-RED\"}",
        "payloadType": "json",
        "x": 240,
        "y": 280,
        "wires": [
            [
                "591bd212f42259f6"
            ]
        ]
    },
    {
        "id": "3385523276eb8635",
        "type": "comment",
        "z": "a59ea6503785db5d",
        "name": "Update flow.wsjtx with status and close messages",
        "info": "",
        "x": 230,
        "y": 100,
        "wires": []
    },
    {
        "id": "08f1067f19fc11a0",
        "type": "comment",
        "z": "a59ea6503785db5d",
        "name": "Track details about multiple instances of WSJT-X",
        "info": "",
        "x": 210,
        "y": 40,
        "wires": []
    },
    {
        "id": "9d2c0e3d86a6ef40",
        "type": "comment",
        "z": "a59ea6503785db5d",
        "name": "Sample \"fake\" instances to test with",
        "info": "",
        "x": 220,
        "y": 200,
        "wires": []
    },
    {
        "id": "c4564728d4438a50",
        "type": "comment",
        "z": "a59ea6503785db5d",
        "name": "Get list of WSJT-X Instance names/ids for display",
        "info": "",
        "x": 230,
        "y": 340,
        "wires": []
    },
    {
        "id": "04ed5ffa6e3df03c",
        "type": "change",
        "z": "a59ea6503785db5d",
        "name": "Get named Instance Details",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$flowContext(\"wsjtx[\\\"\" & msg.payload & \"\\\"]\")",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 480,
        "wires": [
            [
                "d3d3d9289c7fce8a"
            ]
        ]
    },
    {
        "id": "d3d3d9289c7fce8a",
        "type": "debug",
        "z": "a59ea6503785db5d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 480,
        "wires": []
    },
    {
        "id": "2e036f37ac3dbd1b",
        "type": "inject",
        "z": "a59ea6503785db5d",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "WSJT-X",
        "payloadType": "str",
        "x": 110,
        "y": 480,
        "wires": [
            [
                "04ed5ffa6e3df03c"
            ]
        ]
    },
    {
        "id": "a761df8c5653e6f3",
        "type": "comment",
        "z": "a59ea6503785db5d",
        "name": "Get the details of the instance given in msg.payload",
        "info": "",
        "x": 240,
        "y": 440,
        "wires": []
    },
    {
        "id": "a19833eed258b46d",
        "type": "function",
        "z": "a59ea6503785db5d",
        "name": "Get Instance Address",
        "func": "\n// To use: set msg.wsjtx_id = 'instance-name'\n// in your source. This will set msg.ip and msg.port\n// as needed for UDP out to the IP and Port needed to\n// communicate with the instance.\n\nif ('wsjtx_id' in msg) {\n    const wsjtx_id = msg.wsjtx_id;\n    const instances = flow.get('wsjtx') || {};\n    if (wsjtx_id in instances) {\n        const instance = instances[wsjtx_id];\n        if ('address' in instance) {\n            msg.port = instance.address.port;\n            msg.ip = instance.address.ip;\n        }\n    }        \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 580,
        "wires": [
            [
                "666374ebb6ece723"
            ]
        ]
    },
    {
        "id": "60d8beafc5b05077",
        "type": "inject",
        "z": "a59ea6503785db5d",
        "name": "WSJT-X & Payload",
        "props": [
            {
                "p": "wsjtx_id",
                "v": "WSJT-X",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"type\":\"heartbeat\",\"max_schema_number\":3,\"version\":\"2.0.1\",\"revision\":\"\"}",
        "payloadType": "json",
        "x": 150,
        "y": 580,
        "wires": [
            [
                "a19833eed258b46d"
            ]
        ]
    },
    {
        "id": "666374ebb6ece723",
        "type": "wsjt-x-encode",
        "z": "a59ea6503785db5d",
        "name": "",
        "wsjtx_id": "NODE-RED",
        "version": 2.6,
        "schema": 3,
        "x": 580,
        "y": 580,
        "wires": [
            [
                "d2f3152edb49d2ed"
            ]
        ]
    },
    {
        "id": "d2f3152edb49d2ed",
        "type": "debug",
        "z": "a59ea6503785db5d",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 580,
        "wires": []
    },
    {
        "id": "202293f7f45326e4",
        "type": "comment",
        "z": "a59ea6503785db5d",
        "name": "Set instance address for multi-instances of WSJT-X",
        "info": "",
        "x": 230,
        "y": 540,
        "wires": []
    }
]